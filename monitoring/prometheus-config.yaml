apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: gopay
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # GoPay API metrics
      - job_name: 'gopay-api'
        static_configs:
          - targets: ['gopay-api-service:8080']
        metrics_path: /metrics
        scrape_interval: 15s
        scrape_timeout: 10s

      # OpenSearch metrics
      - job_name: 'opensearch'
        static_configs:
          - targets: ['opensearch:9200']
        metrics_path: /_prometheus/metrics
        scrape_interval: 30s

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

  alerts.yml: |
    groups:
    - name: gopay.rules
      rules:
      # Payment processing alerts
      - alert: HighPaymentErrorRate
        expr: (rate(gopay_payment_errors_total[5m]) / rate(gopay_payments_total[5m])) * 100 > 5
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High payment error rate"
          description: "Payment error rate is {{ $value }}% for the last 5 minutes"

      - alert: CriticalPaymentErrorRate
        expr: (rate(gopay_payment_errors_total[5m]) / rate(gopay_payments_total[5m])) * 100 > 10
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Critical payment error rate"
          description: "Payment error rate is {{ $value }}% for the last 5 minutes"

      # Response time alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(gopay_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time"
          description: "95th percentile response time is {{ $value }}s"

      # Service availability alerts
      - alert: ServiceDown
        expr: up{job="gopay-api"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "GoPay service is down"
          description: "GoPay API service has been down for more than 1 minute"

      # Database alerts
      - alert: HighDatabaseConnections
        expr: gopay_database_connections_active > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is {{ $value }}"

      # OpenSearch alerts
      - alert: OpenSearchDown
        expr: up{job="opensearch"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "OpenSearch is down"
          description: "OpenSearch service has been down for more than 2 minutes"

      # Provider specific alerts
      - alert: ProviderHighErrorRate
        expr: (rate(gopay_provider_errors_total[5m]) / rate(gopay_provider_requests_total[5m])) * 100 > 15
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "High error rate for provider {{ $labels.provider }}"
          description: "Provider {{ $labels.provider }} error rate is {{ $value }}%"

      # Volume alerts
      - alert: UnusualPaymentVolume
        expr: rate(gopay_payments_total[1h]) > (rate(gopay_payments_total[1h] offset 24h) * 2)
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Unusual payment volume detected"
          description: "Payment volume is {{ $value }} times higher than same time yesterday"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: gopay
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        ports:
        - containerPort: 9090
          name: web
        args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus/
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --storage.tsdb.retention.time=15d
          - --web.enable-lifecycle
          - --web.enable-admin-api
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-storage
      serviceAccountName: prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: gopay
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: gopay
  labels:
    app: prometheus
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: web
  selector:
    app: prometheus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: gopay
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: gopay 