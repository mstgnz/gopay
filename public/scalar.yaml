openapi: 3.0.0
info:
  title: GoPay API Documentation
  version: 1.0.0
  description: |
    **GoPay** is a unified payment integration service developed in Go. It abstracts different payment providers behind a single, standardized API, allowing developers to switch payment systems seamlessly without changing their codebase.

    ## Key Features
    - üîÑ **Unified API Interface**: Standardize diverse payment gateway APIs (ƒ∞yzico, OzanPay, Stripe, etc.) into a consistent format
    - üîå **Plug-and-Play Architecture**: Easily switch between payment providers without code changes
    - üè¢ **Provider Agnostic**: Add new payment gateways without disrupting existing implementations
    - üè¢ **Multi-Tenant Support**: Multiple projects can use different provider configurations simultaneously
    - üîê **3D Secure Support**: Complete 3D Secure payment flow with callback handling
    - üí∞ **Full Payment Lifecycle**: Process, track, cancel, and refund payments
    - üéØ **Webhook Integration**: Receive real-time payment notifications
    - üõ°Ô∏è **Secure by Design**: Built-in authentication and security features
    - üíæ **Persistent Configuration**: SQLite-based tenant configuration storage

    ## Supported Payment Providers
    - ‚úÖ **ƒ∞yzico** (Turkey) - Full integration with 3D Secure support
    - ‚úÖ **OzanPay** (Turkey) - Production ready
    - ‚úÖ **Stripe** (Global) - Production ready
    - ‚úÖ **Paycell** (Turkey) - Production ready
    - ‚úÖ **Papara** (Turkey) - Production ready
    - ‚úÖ **Nkolay** (Turkey) - Production ready
    - ‚úÖ **PayTR** (Turkey) - Production ready
    - ‚úÖ **PayU** (Global) - Production ready

    ## Authentication
    All API endpoints require a Bearer token for authentication. Include the token in the Authorization header:
    ```
    Authorization: Bearer <your_api_key>
    ```

    ## Multi-Tenant Configuration
    GoPay supports multi-tenant architecture where different projects can use different payment provider configurations.

    ### Setup Flow
    1. `POST /v1/set-env` with `X-Tenant-ID` header - Configure payment provider for a tenant
    2. Use payment endpoints with same `X-Tenant-ID` header - Automatically uses tenant-specific configuration

    ### Tenant Header
    For tenant-specific operations, include the tenant identifier in the header:
    ```
    X-Tenant-ID: your_project_name
    ```

    ## Payment Flow
    ### Regular Payment
    1. `POST /v1/payments/{provider}` - Process payment
    2. `GET /v1/payments/{provider}/{paymentID}` - Check status
    3. `POST /v1/payments/{provider}/refund` - Refund if needed

    ### 3D Secure Payment
    1. `POST /v1/payments/{provider}` with `use3D: true` - Initialize 3D payment
    2. User completes 3D authentication on bank page
    3. `GET|POST /v1/callback/{provider}` - Handle callback
    4. `GET /v1/payments/{provider}/{paymentID}` - Verify final status

    ## Contact
    - **Developer**: Mesut GENEZ
    - **GitHub**: [https://github.com/mstgnz/gopay](https://github.com/mstgnz/gopay)
    - **License**: MIT

servers:
  - url: http://localhost:9999
    description: Local development server
  - url: https://gopay.yourcompany.com
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API_KEY
      description: API key required for payment operations
  
  schemas:
    # Common Response Schemas
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Operation success status
          example: true
        message:
          type: string
          description: Operation result message
          example: "Payment processed successfully"
        data:
          type: object
          description: Response data
          
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Always false for errors
          example: false
        message:
          type: string
          description: Error message
          example: "Payment failed"
        error:
          type: string
          description: Detailed error information
          example: "Invalid card number"

    # Payment Related Schemas
    PaymentStatus:
      type: string
      enum: [pending, processing, successful, failed, cancelled, refunded]
      description: Current payment status

    Address:
      type: object
      properties:
        city:
          type: string
          example: "Istanbul"
        country:
          type: string
          example: "Turkey"
        address:
          type: string
          example: "Atat√ºrk Mahallesi 123 Sokak No:45"
        zipCode:
          type: string
          example: "34000"
        description:
          type: string
          example: "Home address"

    Customer:
      type: object
      required: [name, surname, email]
      properties:
        id:
          type: string
          example: "customer123"
          description: Unique customer identifier
        name:
          type: string
          example: "John"
          description: Customer first name
        surname:
          type: string
          example: "Doe"
          description: Customer last name
        email:
          type: string
          format: email
          example: "john.doe@example.com"
          description: Customer email address
        phoneNumber:
          type: string
          example: "+905551234567"
          description: Customer phone number
        ipAddress:
          type: string
          format: ipv4
          example: "192.168.1.1"
          description: Customer IP address
        address:
          $ref: '#/components/schemas/Address'

    CardInfo:
      type: object
      required: [cardHolderName, cardNumber, expireMonth, expireYear, cvv]
      properties:
        cardHolderName:
          type: string
          example: "John Doe"
          description: Name on the card
        cardNumber:
          type: string
          example: "5528790000000008"
          description: Card number (for ƒ∞yzico test use 5528790000000008)
        expireMonth:
          type: string
          pattern: '^(0[1-9]|1[0-2])$'
          example: "12"
          description: Card expiration month (MM)
        expireYear:
          type: string
          pattern: '^20[2-9][0-9]$'
          example: "2030"
          description: Card expiration year (YYYY)
        cvv:
          type: string
          pattern: '^[0-9]{3,4}$'
          example: "123"
          description: Card verification value

    Item:
      type: object
      properties:
        id:
          type: string
          example: "item1"
          description: Item identifier
        name:
          type: string
          example: "Premium Product"
          description: Item name
        description:
          type: string
          example: "High quality product"
          description: Item description
        category:
          type: string
          example: "Electronics"
          description: Item category
        price:
          type: number
          format: float
          example: 100.50
          description: Item price
        quantity:
          type: integer
          minimum: 1
          example: 1
          description: Item quantity

    PaymentRequest:
      type: object
      required: [amount, currency, customer, cardInfo]
      properties:
        id:
          type: string
          example: "payment123"
          description: Payment identifier
        referenceId:
          type: string
          example: "order456"
          description: External reference ID
        currency:
          type: string
          enum: [TRY, USD, EUR]
          example: "TRY"
          description: Payment currency
        amount:
          type: number
          format: float
          minimum: 0.01
          example: 100.50
          description: Payment amount
        customer:
          $ref: '#/components/schemas/Customer'
        cardInfo:
          $ref: '#/components/schemas/CardInfo'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          description: Payment items
        description:
          type: string
          example: "Order payment"
          description: Payment description
        callbackUrl:
          type: string
          format: uri
          example: "https://yoursite.com/payment-callback"
          description: 3D Secure callback URL (required for 3D payments)
        use3D:
          type: boolean
          default: false
          example: true
          description: Enable 3D Secure authentication
        installmentCount:
          type: integer
          minimum: 1
          maximum: 12
          default: 1
          example: 1
          description: Number of installments
        paymentChannel:
          type: string
          example: "WEB"
          description: Payment channel
        paymentGroup:
          type: string
          example: "PRODUCT"
          description: Payment group
        conversationId:
          type: string
          example: "conv123"
          description: Conversation ID for tracking
        locale:
          type: string
          enum: [tr, en]
          default: "tr"
          example: "tr"
          description: Payment language
        clientIp:
          type: string
          format: ipv4
          example: "192.168.1.1"
          description: Client IP address
        clientUserAgent:
          type: string
          example: "Mozilla/5.0..."
          description: Client user agent
        metaData:
          type: string
          example: "{\"userId\":123}"
          description: Additional metadata
        redirectUrl:
          type: string
          format: uri
          example: "https://yoursite.com/payment-result"
          description: Redirect URL after payment

    PaymentResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
          description: Payment operation success
        status:
          $ref: '#/components/schemas/PaymentStatus'
        message:
          type: string
          example: "Payment successful"
          description: Operation message
        errorCode:
          type: string
          example: "5007"
          description: Provider specific error code
        transactionId:
          type: string
          example: "txn123"
          description: Transaction identifier
        paymentId:
          type: string
          example: "payment123"
          description: Payment identifier
        amount:
          type: number
          format: float
          example: 100.50
          description: Payment amount
        currency:
          type: string
          example: "TRY"
          description: Payment currency
        redirectUrl:
          type: string
          format: uri
          example: "https://3dsecure.bank.com/auth"
          description: 3D Secure redirect URL
        html:
          type: string
          example: "<form>3D Secure form</form>"
          description: 3D Secure HTML form
        systemTime:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: System timestamp
        fraudStatus:
          type: integer
          example: 1
          description: Fraud check status
        providerResponse:
          type: object
          description: Raw provider response

    RefundRequest:
      type: object
      required: [paymentId]
      properties:
        paymentId:
          type: string
          example: "payment123"
          description: Payment ID to refund
        refundAmount:
          type: number
          format: float
          example: 50.00
          description: Refund amount (leave empty for full refund)
        reason:
          type: string
          example: "Customer request"
          description: Refund reason
        description:
          type: string
          example: "Customer requested partial refund"
          description: Detailed refund description
        currency:
          type: string
          example: "TRY"
          description: Refund currency
        conversationId:
          type: string
          example: "conv123"
          description: Conversation ID

    RefundResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
          description: Refund operation success
        refundId:
          type: string
          example: "refund123"
          description: Refund identifier
        paymentId:
          type: string
          example: "payment123"
          description: Original payment ID
        status:
          type: string
          example: "success"
          description: Refund status
        refundAmount:
          type: number
          format: float
          example: 50.00
          description: Refunded amount
        message:
          type: string
          example: "Refund successful"
          description: Operation message
        errorCode:
          type: string
          example: ""
          description: Error code if failed
        systemTime:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: System timestamp
        rawResponse:
          type: object
          description: Raw provider response

    CancelRequest:
      type: object
      properties:
        reason:
          type: string
          example: "Customer request"
          description: Cancellation reason

    # Configuration Schemas
    SetEnvRequest:
      type: object
      description: |
        Configuration request for setting up payment provider credentials for a tenant.
        At least one provider configuration must be provided.
      properties:
        # ƒ∞yzico Configuration
        IYZICO_API_KEY:
          type: string
          example: "sandbox-api-key"
          description: ƒ∞yzico API key
        IYZICO_SECRET_KEY:
          type: string
          example: "sandbox-secret-key"
          description: ƒ∞yzico secret key
        IYZICO_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: ƒ∞yzico environment

        # OzanPay Configuration
        OZANPAY_API_KEY:
          type: string
          example: "ozanpay-api-key"
          description: OzanPay API key
        OZANPAY_SECRET_KEY:
          type: string
          example: "ozanpay-secret-key"
          description: OzanPay secret key
        OZANPAY_MERCHANT_ID:
          type: string
          example: "merchant123"
          description: OzanPay merchant ID
        OZANPAY_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: OzanPay environment

        # Stripe Configuration
        STRIPE_SECRET_KEY:
          type: string
          example: "sk_test_123..."
          description: Stripe secret key
        STRIPE_PUBLIC_KEY:
          type: string
          example: "pk_test_123..."
          description: Stripe public key
        STRIPE_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: Stripe environment

        # Paycell Configuration
        PAYCELL_USERNAME:
          type: string
          example: "paycell-user"
          description: Paycell username
        PAYCELL_PASSWORD:
          type: string
          example: "paycell-pass"
          description: Paycell password
        PAYCELL_MERCHANT_ID:
          type: string
          example: "merchant456"
          description: Paycell merchant ID
        PAYCELL_TERMINAL_ID:
          type: string
          example: "terminal789"
          description: Paycell terminal ID
        PAYCELL_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: Paycell environment

        # Papara Configuration
        PAPARA_API_KEY:
          type: string
          example: "papara-api-key"
          description: Papara API key
        PAPARA_SECRET_KEY:
          type: string
          example: "papara-secret-key"
          description: Papara secret key
        PAPARA_MERCHANT_ID:
          type: string
          example: "papara-merchant-123"
          description: Papara merchant ID
        PAPARA_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: Papara environment

        # Nkolay Configuration
        NKOLAY_API_KEY:
          type: string
          example: "nkolay-api-key"
          description: Nkolay API key
        NKOLAY_SECRET_KEY:
          type: string
          example: "nkolay-secret-key"
          description: Nkolay secret key
        NKOLAY_MERCHANT_ID:
          type: string
          example: "nkolay-merchant-123"
          description: Nkolay merchant ID
        NKOLAY_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: Nkolay environment

        # PayTR Configuration
        PAYTR_MERCHANT_ID:
          type: string
          example: "paytr-merchant-123"
          description: PayTR merchant ID
        PAYTR_MERCHANT_KEY:
          type: string
          example: "paytr-merchant-key"
          description: PayTR merchant key
        PAYTR_MERCHANT_SALT:
          type: string
          example: "paytr-merchant-salt"
          description: PayTR merchant salt
        PAYTR_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: PayTR environment

        # PayU Configuration
        PAYU_MERCHANT_ID:
          type: string
          example: "payu-merchant-123"
          description: PayU merchant ID
        PAYU_SECRET_KEY:
          type: string
          example: "payu-secret-key"
          description: PayU secret key
        PAYU_API_KEY:
          type: string
          example: "payu-api-key"
          description: PayU API key
        PAYU_ENVIRONMENT:
          type: string
          enum: [sandbox, production]
          default: sandbox
          example: "sandbox"
          description: PayU environment

    SetEnvResponse:
      type: object
      properties:
        tenantId:
          type: string
          example: "abc_project"
          description: Tenant identifier
        configuredProviders:
          type: array
          items:
            type: string
          example: ["iyzico", "ozanpay"]
          description: List of successfully configured providers
        message:
          type: string
          example: "Provider configurations set successfully"
          description: Success message

    TenantConfigResponse:
      type: object
      properties:
        tenantId:
          type: string
          example: "abc_project"
          description: Tenant identifier
        provider:
          type: string
          example: "iyzico"
          description: Provider name
        config:
          type: object
          additionalProperties:
            type: string
          example:
            apiKey: "sand****key"
            secretKey: "sand****ret"
            environment: "sandbox"
          description: Masked configuration values

    StatsResponse:
      type: object
      properties:
        memory_configs:
          type: integer
          example: 15
          description: Number of configurations in memory
        base_url:
          type: string
          example: "http://localhost:9999"
          description: Base URL for callbacks
        sqlite:
          type: object
          properties:
            total_configs:
              type: integer
              example: 15
              description: Total configurations in database
            unique_tenants:
              type: integer
              example: 5
              description: Number of unique tenants
            unique_providers:
              type: integer
              example: 3
              description: Number of unique providers
            db_size_bytes:
              type: integer
              example: 32768
              description: Database file size in bytes
            db_path:
              type: string
              example: "/app/data/gopay.db"
              description: Database file path
          description: SQLite database statistics

    # Logging Schemas
    PaymentLog:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Log timestamp
        tenant_id:
          type: string
          example: "tenant123"
          description: Tenant identifier
        provider:
          type: string
          example: "iyzico"
          description: Payment provider
        method:
          type: string
          example: "POST"
          description: HTTP method
        endpoint:
          type: string
          example: "/v1/payments/iyzico"
          description: API endpoint
        request_id:
          type: string
          example: "req-123"
          description: Request identifier
        user_agent:
          type: string
          example: "GoPay-Client/1.0"
          description: User agent
        client_ip:
          type: string
          format: ipv4
          example: "192.168.1.1"
          description: Client IP address
        request:
          type: object
          properties:
            headers:
              type: object
              additionalProperties:
                type: string
              example:
                Content-Type: "application/json"
                Authorization: "***REDACTED***"
              description: Request headers (sensitive data redacted)
            body:
              type: string
              example: '{"amount":100.50,"currency":"TRY","cardNumber":"***REDACTED***"}'
              description: Request body (sensitive data redacted)
            params:
              type: object
              additionalProperties:
                type: string
              description: URL parameters
        response:
          type: object
          properties:
            status_code:
              type: integer
              example: 200
              description: HTTP status code
            headers:
              type: object
              additionalProperties:
                type: string
              description: Response headers
            body:
              type: string
              example: '{"success":true,"paymentId":"pay123"}'
              description: Response body
            processing_time_ms:
              type: integer
              example: 1250
              description: Processing time in milliseconds
        payment_info:
          type: object
          properties:
            payment_id:
              type: string
              example: "payment123"
              description: Payment identifier
            amount:
              type: number
              format: float
              example: 100.50
              description: Payment amount
            currency:
              type: string
              example: "TRY"
              description: Payment currency
            customer_email:
              type: string
              format: email
              example: "john@example.com"
              description: Customer email
            status:
              type: string
              example: "successful"
              description: Payment status
            use_3d:
              type: boolean
              example: true
              description: 3D Secure used
        error:
          type: object
          properties:
            code:
              type: string
              example: "5007"
              description: Error code
            message:
              type: string
              example: "Payment failed"
              description: Error message

    LoggingStats:
      type: object
      properties:
        aggregations:
          type: object
          properties:
            total_requests:
              type: object
              properties:
                value:
                  type: integer
                  example: 150
                  description: Total number of requests
            success_count:
              type: object
              properties:
                doc_count:
                  type: integer
                  example: 142
                  description: Number of successful requests
            error_count:
              type: object
              properties:
                doc_count:
                  type: integer
                  example: 8
                  description: Number of failed requests
            avg_processing_time:
              type: object
              properties:
                value:
                  type: number
                  format: float
                  example: 245.5
                  description: Average processing time in milliseconds
            status_codes:
              type: object
              properties:
                buckets:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: integer
                        example: 200
                        description: HTTP status code
                      doc_count:
                        type: integer
                        example: 142
                        description: Number of requests with this status
                  example:
                    - key: 200
                      doc_count: 142
                    - key: 400
                      doc_count: 5
                    - key: 500
                      doc_count: 3
                  description: Distribution of HTTP status codes

security:
  - BearerAuth: []

paths:
  # Configuration Operations
  /v1/set-env:
    post:
      summary: Configure payment provider for tenant
      description: |
        Sets up payment provider configurations for a specific tenant.
        This allows different projects to use different payment provider credentials.
        
        **Multi-Tenant Flow:**
        1. Call this endpoint with `X-Tenant-ID` header and provider credentials
        2. Use payment endpoints with the same `X-Tenant-ID` header
        3. GoPay automatically uses tenant-specific provider configuration
        
        **Supported Providers:**
        - **ƒ∞yzico**: Requires `IYZICO_API_KEY`, `IYZICO_SECRET_KEY`, `IYZICO_ENVIRONMENT`
        - **OzanPay**: Requires `OZANPAY_API_KEY`, `OZANPAY_SECRET_KEY`, `OZANPAY_MERCHANT_ID`, `OZANPAY_ENVIRONMENT`
        - **Stripe**: Requires `STRIPE_SECRET_KEY`, `STRIPE_PUBLIC_KEY`, `STRIPE_ENVIRONMENT`
        - **Paycell**: Requires `PAYCELL_USERNAME`, `PAYCELL_PASSWORD`, `PAYCELL_MERCHANT_ID`, `PAYCELL_TERMINAL_ID`, `PAYCELL_ENVIRONMENT`
        - **Papara**: Requires `PAPARA_API_KEY`, `PAPARA_SECRET_KEY`, `PAPARA_MERCHANT_ID`, `PAPARA_ENVIRONMENT`
        - **Nkolay**: Requires `NKOLAY_API_KEY`, `NKOLAY_SECRET_KEY`, `NKOLAY_MERCHANT_ID`, `NKOLAY_ENVIRONMENT`
        - **PayTR**: Requires `PAYTR_MERCHANT_ID`, `PAYTR_MERCHANT_KEY`, `PAYTR_MERCHANT_SALT`, `PAYTR_ENVIRONMENT`
        - **PayU**: Requires `PAYU_MERCHANT_ID`, `PAYU_SECRET_KEY`, `PAYU_API_KEY`, `PAYU_ENVIRONMENT`
      tags: [Configuration]
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Unique identifier for the tenant/project
          example: abc_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetEnvRequest'
            examples:
              iyzico_config:
                summary: ƒ∞yzico Configuration
                value:
                  IYZICO_API_KEY: "sandbox-DzgHbZnL4y7TVIYMqgKRw5lGlYDm5KCH"
                  IYZICO_SECRET_KEY: "sandbox-aXKQk8o6f4KQhFvG0hQlRfPTL8kMJ1wC"
                  IYZICO_ENVIRONMENT: "sandbox"
              multi_provider_config:
                summary: Multiple Providers
                value:
                  IYZICO_API_KEY: "sandbox-DzgHbZnL4y7TVIYMqgKRw5lGlYDm5KCH"
                  IYZICO_SECRET_KEY: "sandbox-aXKQk8o6f4KQhFvG0hQlRfPTL8kMJ1wC"
                  IYZICO_ENVIRONMENT: "sandbox"
                  OZANPAY_API_KEY: "ozanpay-api-key"
                  OZANPAY_SECRET_KEY: "ozanpay-secret-key"
                  OZANPAY_MERCHANT_ID: "merchant123"
                  OZANPAY_ENVIRONMENT: "sandbox"
      responses:
        '200':
          description: Configuration saved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SetEnvResponse'
        '400':
          description: Invalid configuration data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error

  /v1/config/tenant-config:
    get:
      summary: Get tenant configuration for provider
      description: |
        Retrieves the configuration for a specific tenant and provider.
        Sensitive information (API keys, passwords) are masked in the response.
      tags: [Configuration]
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Unique identifier for the tenant/project
          example: abc_project
        - name: provider
          in: query
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, paycell]
          description: Payment provider name
          example: iyzico
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TenantConfigResponse'
        '400':
          description: Missing required parameters
        '404':
          description: Configuration not found
        '500':
          description: Internal server error
    
    delete:
      summary: Delete tenant configuration for provider
      description: |
        Deletes the configuration for a specific tenant and provider.
        This removes both the in-memory and persistent storage configuration.
      tags: [Configuration]
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Unique identifier for the tenant/project
          example: abc_project
        - name: provider
          in: query
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, paycell]
          description: Payment provider name
          example: iyzico
      responses:
        '200':
          description: Configuration deleted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tenantId:
                            type: string
                            example: "abc_project"
                          provider:
                            type: string
                            example: "iyzico"
                          message:
                            type: string
                            example: "Configuration deleted successfully"
        '400':
          description: Missing required parameters
        '404':
          description: Configuration not found
        '500':
          description: Internal server error

  /v1/stats:
    get:
      summary: Get system statistics
      description: |
        Returns system statistics including:
        - Number of configurations in memory
        - SQLite database statistics
        - Storage information
      tags: [Configuration]
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/StatsResponse'
        '500':
          description: Internal server error

  # Payment Operations
  /v1/payments:
    post:
      summary: Process payment with default provider
      description: |
        Processes a payment using the default configured payment provider.
        
        **For 3D Secure payments:**
        - Set `use3D: true` in the request
        - Provide `callbackUrl` for redirect after authentication
        - Handle the callback at your specified URL
        
        **Test Cards by Provider:**
        
        **ƒ∞yzico:**
        - Success: `5528790000000008` (12/2030, CVV: 123)
        - Insufficient funds: `5528790000000016`
        - Invalid card: `5528790000000032`
        
        **Stripe:**
        - Success: `4242424242424242` (any future date, any CVV)
        - 3D Secure: `4000000000003220`
        - Insufficient funds: `4000000000009995`
        - Invalid card: `4000000000000127`
        
        **OzanPay/Nkolay:**
        - Success: `4111111111111111` or `5555555555554444`
        - Insufficient funds: `4000000000000002`
        - Invalid card: `4000000000000127`
        
        **Paycell:**
        - Success: `5528790000000008` (12/26, CVV: 001)
        - 3D Secure: `4355084355084358` (12/26, CVV: 000)
        
        **PayTR:**
        - Success: `4355084355084358` or `5406675406675403`
        - Any future expiry date, any 3-digit CVV
        
        **Papara/PayU:**
        - Success: `5528790000000008` (12/30, CVV: 123)
        - Declined: `5555555555554444`
      tags: [Payments]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            examples:
              regular_payment:
                summary: Regular Payment
                value:
                  amount: 100.50
                  currency: "TRY"
                  customer:
                    name: "John"
                    surname: "Doe"
                    email: "john@example.com"
                    address:
                      city: "Istanbul"
                      country: "Turkey"
                      address: "Test Address 123"
                      zipCode: "34000"
                  cardInfo:
                    cardHolderName: "John Doe"
                    cardNumber: "5528790000000008"
                    expireMonth: "12"
                    expireYear: "2030"
                    cvv: "123"
                  description: "Test payment"
                  use3D: false
              threeds_payment:
                summary: 3D Secure Payment
                value:
                  amount: 250.00
                  currency: "TRY"
                  customer:
                    name: "Jane"
                    surname: "Smith"
                    email: "jane@example.com"
                    address:
                      city: "Ankara"
                      country: "Turkey"
                      address: "Test Address 456"
                      zipCode: "06000"
                  cardInfo:
                    cardHolderName: "Jane Smith"
                    cardNumber: "5528790000000008"
                    expireMonth: "12"
                    expireYear: "2030"
                    cvv: "123"
                  description: "3D Secure payment"
                  use3D: true
                  callbackUrl: "https://yoursite.com/payment-callback"
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /v1/payments/{provider}:
    post:
      summary: Process payment with specific provider
      description: |
        Processes a payment using a specific payment provider.
        
        **Available Providers:**
        - `iyzico` - ƒ∞yzico (Turkey)
        - `ozanpay` - OzanPay (Turkey) 
        - `stripe` - Stripe (Global)
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
        - If no header provided, uses default environment configuration
      tags: [Payments]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid request or provider not supported
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /v1/payments/{paymentID}:
    get:
      summary: Get payment status with default provider
      description: Retrieves the current status of a payment using the default provider
      tags: [Payments]
      security:
        - BearerAuth: []
      parameters:
        - name: paymentID
          in: path
          required: true
          schema:
            type: string
          description: Payment ID to check
          example: payment123
      responses:
        '200':
          description: Payment status retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid payment ID
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment not found
        '500':
          description: Internal server error
    
    delete:
      summary: Cancel payment with default provider
      description: Cancels a payment using the default provider
      tags: [Payments]
      security:
        - BearerAuth: []
      parameters:
        - name: paymentID
          in: path
          required: true
          schema:
            type: string
          description: Payment ID to cancel
          example: payment123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: Payment cancelled successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid payment ID or payment cannot be cancelled
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment not found
        '500':
          description: Internal server error

  /v1/payments/{provider}/{paymentID}:
    get:
      summary: Get payment status with specific provider
      description: |
        Retrieves the current status of a payment using a specific provider.
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
      tags: [Payments]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: paymentID
          in: path
          required: true
          schema:
            type: string
          description: Payment ID to check
          example: payment123
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
      responses:
        '200':
          description: Payment status retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment not found
        '500':
          description: Internal server error
    
    delete:
      summary: Cancel payment with specific provider
      description: |
        Cancels a payment using a specific provider.
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
      tags: [Payments]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: paymentID
          in: path
          required: true
          schema:
            type: string
          description: Payment ID to cancel
          example: payment123
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: Payment cancelled successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid parameters or payment cannot be cancelled
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment not found
        '500':
          description: Internal server error

  # Refund Operations
  /v1/payments/refund:
    post:
      summary: Refund payment with default provider
      description: |
        Processes a refund using the default provider.
        
        **Refund Types:**
        - **Full Refund**: Don't specify `refundAmount`
        - **Partial Refund**: Specify `refundAmount` less than original amount
      tags: [Refunds]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
            examples:
              full_refund:
                summary: Full Refund
                value:
                  paymentId: "payment123"
                  reason: "Customer request"
                  description: "Customer requested full refund"
              partial_refund:
                summary: Partial Refund
                value:
                  paymentId: "payment123"
                  refundAmount: 50.00
                  reason: "Partial refund"
                  description: "Customer requested partial refund"
                  currency: "TRY"
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RefundResponse'
        '400':
          description: Invalid refund request
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment not found
        '500':
          description: Internal server error

  /v1/payments/{provider}/refund:
    post:
      summary: Refund payment with specific provider
      description: |
        Processes a refund using a specific provider.
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
      tags: [Refunds]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/RefundResponse'
        '400':
          description: Invalid refund request
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment not found
        '500':
          description: Internal server error

  # 3D Secure Callbacks
  /v1/callback:
    get:
      summary: Handle 3D Secure callback (GET) with default provider
      description: |
        Handles 3D Secure authentication callback from the bank using GET method with default provider.
        This endpoint is called by the bank after user completes 3D authentication.
      tags: [3D Secure]
      parameters:
        - name: paymentId
          in: query
          required: true
          schema:
            type: string
          description: Payment ID from initial 3D request
        - name: conversationId
          in: query
          schema:
            type: string
          description: Conversation ID for tracking
        - name: successUrl
          in: query
          schema:
            type: string
            format: uri
          description: URL to redirect on success
        - name: errorUrl
          in: query
          schema:
            type: string
            format: uri
          description: URL to redirect on error
      responses:
        '200':
          description: 3D Secure authentication completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '302':
          description: Redirect to success/error URL
        '400':
          description: Invalid callback data
        '500':
          description: Internal server error
    
    post:
      summary: Handle 3D Secure callback (POST) with default provider
      description: |
        Handles 3D Secure authentication callback from the bank using POST method with default provider.
        This endpoint is called by the bank after user completes 3D authentication.
      tags: [3D Secure]
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                paymentId:
                  type: string
                  description: Payment ID
                conversationId:
                  type: string
                  description: Conversation ID
                status:
                  type: string
                  description: 3D authentication status
                mdStatus:
                  type: string
                  description: 3D authentication result
      responses:
        '200':
          description: 3D Secure authentication completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '302':
          description: Redirect to success/error URL
        '400':
          description: Invalid callback data
        '500':
          description: Internal server error

  /v1/callback/{provider}:
    get:
      summary: Handle 3D Secure callback (GET) with specific provider
      description: |
        Handles 3D Secure authentication callback from the bank using GET method with specific provider.
        This endpoint is called by the bank after user completes 3D authentication.
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
      tags: [3D Secure]
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
        - name: paymentId
          in: query
          required: true
          schema:
            type: string
          description: Payment ID from initial 3D request
        - name: conversationId
          in: query
          schema:
            type: string
          description: Conversation ID for tracking
        - name: successUrl
          in: query
          schema:
            type: string
            format: uri
          description: URL to redirect on success
        - name: errorUrl
          in: query
          schema:
            type: string
            format: uri
          description: URL to redirect on error
      responses:
        '200':
          description: 3D Secure authentication completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '302':
          description: Redirect to success/error URL
        '400':
          description: Invalid callback data
        '500':
          description: Internal server error
    
    post:
      summary: Handle 3D Secure callback (POST) with specific provider
      description: |
        Handles 3D Secure authentication callback from the bank using POST method with specific provider.
        This endpoint is called by the bank after user completes 3D authentication.
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
      tags: [3D Secure]
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                paymentId:
                  type: string
                  description: Payment ID
                conversationId:
                  type: string
                  description: Conversation ID
                status:
                  type: string
                  description: 3D authentication status
                mdStatus:
                  type: string
                  description: 3D authentication result
      responses:
        '200':
          description: 3D Secure authentication completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '302':
          description: Redirect to success/error URL
        '400':
          description: Invalid callback data
        '500':
          description: Internal server error

  # Webhook Operations
  /v1/webhooks/{provider}:
    post:
      summary: Handle webhook notifications
      description: |
        Receives webhook notifications from payment providers.
        
        **ƒ∞yzico Webhooks:**
        - Payment status updates
        - Refund notifications
        - Fraud alerts
        
        **Multi-Tenant Support:**
        - Include `X-Tenant-ID` header to use tenant-specific provider configuration
        
        **Note:** This endpoint validates webhook signatures and processes notifications asynchronously.
      tags: [Webhooks]
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant usage (optional)
          example: abc_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              description: Provider-specific webhook payload
            examples:
              iyzico_webhook:
                summary: ƒ∞yzico Webhook
                value:
                  paymentId: "payment123"
                  status: "success"
                  transactionId: "txn456"
                  amount: "100.50"
                  currency: "TRY"
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        description: Validated webhook data
        '400':
          description: Invalid webhook data or signature
        '401':
          description: Webhook authentication failed
        '500':
          description: Internal server error

  # Analytics Operations (No Authentication Required)
  /v1/analytics/dashboard:
    get:
      summary: Get dashboard statistics
      description: |
        Retrieves comprehensive dashboard statistics including:
        - Payment volume and success rates
        - Provider performance metrics
        - Recent transaction trends
        - Error rates and common issues
        
        **No Authentication Required** - This endpoint is public for dashboard display.
      tags: [Analytics]
      parameters:
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 168
            default: 24
          description: Time range in hours (max 7 days)
          example: 24
      responses:
        '200':
          description: Dashboard statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Dashboard statistics retrieved"
                  data:
                    type: object
                    properties:
                      totalPayments:
                        type: integer
                        example: 1250
                      successfulPayments:
                        type: integer
                        example: 1187
                      failedPayments:
                        type: integer
                        example: 63
                      successRate:
                        type: number
                        format: float
                        example: 94.96
                      totalVolume:
                        type: number
                        format: float
                        example: 125430.50
                      averageAmount:
                        type: number
                        format: float
                        example: 100.34
                      topProviders:
                        type: array
                        items:
                          type: object
                          properties:
                            provider:
                              type: string
                              example: "iyzico"
                            count:
                              type: integer
                              example: 450
                            volume:
                              type: number
                              format: float
                              example: 45230.75
                      recentTrends:
                        type: array
                        items:
                          type: object
                          properties:
                            hour:
                              type: string
                              format: date-time
                              example: "2024-01-15T10:00:00Z"
                            payments:
                              type: integer
                              example: 52
                            volume:
                              type: number
                              format: float
                              example: 5234.20
        '500':
          description: Internal server error

  /v1/analytics/providers:
    get:
      summary: Get provider statistics
      description: |
        Retrieves performance statistics for all payment providers including:
        - Success rates by provider
        - Average processing times
        - Error rates and common failures
        - Volume distribution
      tags: [Analytics]
      parameters:
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 168
            default: 24
          description: Time range in hours (max 7 days)
          example: 24
      responses:
        '200':
          description: Provider statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        provider:
                          type: string
                          example: "iyzico"
                        totalPayments:
                          type: integer
                          example: 450
                        successfulPayments:
                          type: integer
                          example: 428
                        successRate:
                          type: number
                          format: float
                          example: 95.11
                        totalVolume:
                          type: number
                          format: float
                          example: 45230.75
                        averageProcessingTime:
                          type: number
                          format: float
                          example: 1250.5
                        commonErrors:
                          type: array
                          items:
                            type: object
                            properties:
                              errorCode:
                                type: string
                                example: "INSUFFICIENT_FUNDS"
                              count:
                                type: integer
                                example: 15
        '500':
          description: Internal server error

  /v1/analytics/activity:
    get:
      summary: Get recent payment activity
      description: |
        Retrieves recent payment activity for real-time monitoring:
        - Latest transactions
        - Status changes
        - Failed payments
        - Refunds and cancellations
      tags: [Analytics]
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum number of activities to return
          example: 20
        - name: provider
          in: query
          required: false
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe, paycell, papara, nkolay, paytr, payu]
          description: Filter by specific provider
          example: iyzico
      responses:
        '200':
          description: Recent activity retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                          example: "2024-01-15T10:30:00Z"
                        provider:
                          type: string
                          example: "iyzico"
                        paymentId:
                          type: string
                          example: "payment_123"
                        amount:
                          type: number
                          format: float
                          example: 100.50
                        currency:
                          type: string
                          example: "TRY"
                        status:
                          type: string
                          example: "successful"
                        customerEmail:
                          type: string
                          example: "user@example.com"
                        activityType:
                          type: string
                          enum: [payment, refund, cancellation, status_change]
                          example: "payment"
        '500':
          description: Internal server error

  /v1/analytics/trends:
    get:
      summary: Get payment trends
      description: |
        Retrieves payment trends over time for analytics:
        - Hourly payment volumes
        - Success rate trends
        - Provider performance over time
        - Seasonal patterns
      tags: [Analytics]
      parameters:
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 168
            default: 24
          description: Time range in hours (max 7 days)
          example: 24
        - name: granularity
          in: query
          required: false
          schema:
            type: string
            enum: [hour, day]
            default: hour
          description: Data granularity
          example: hour
      responses:
        '200':
          description: Payment trends retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      period:
                        type: string
                        example: "24h"
                      granularity:
                        type: string
                        example: "hour"
                      trends:
                        type: array
                        items:
                          type: object
                          properties:
                            timestamp:
                              type: string
                              format: date-time
                              example: "2024-01-15T10:00:00Z"
                            totalPayments:
                              type: integer
                              example: 52
                            successfulPayments:
                              type: integer
                              example: 49
                            failedPayments:
                              type: integer
                              example: 3
                            totalVolume:
                              type: number
                              format: float
                              example: 5234.20
                            averageAmount:
                              type: number
                              format: float
                              example: 100.66
        '500':
          description: Internal server error

  # Health Check (No Authentication Required)
  /health:
    get:
      summary: Service health check
      description: |
        Returns the health status of the GoPay service including:
        - Service availability
        - OpenSearch logging status
        - Provider connectivity
        - System version
        
        **No Authentication Required** - This is a public health check endpoint.
      tags: [System]
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Service is healthy"
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: "ok"
                      timestamp:
                        type: string
                        format: date-time
                        example: "2024-01-15T10:30:00Z"
                      version:
                        type: string
                        example: "1.0.0"
                      opensearch_enabled:
                        type: boolean
                        example: true
        '503':
          description: Service unavailable

  # Callback Operations (No Authentication Required)
  /callback:
    get:
      summary: Handle 3D Secure callback (GET) with default provider
      description: |
        Handles 3D Secure authentication callback from the bank using GET method with default provider.
        This endpoint is called by the bank after user completes 3D authentication.
        
        **No Authentication Required** - Called directly by payment providers.
      tags: [3D Secure]
      parameters:
        - name: paymentId
          in: query
          required: true
          schema:
            type: string
          description: Payment ID from initial 3D request
        - name: conversationId
          in: query
          schema:
            type: string
          description: Conversation ID for tracking
        - name: tenantId
          in: query
          schema:
            type: string
          description: Tenant identifier for multi-tenant callback routing
        - name: originalCallbackUrl
          in: query
          schema:
            type: string
            format: uri
          description: Original application callback URL
      responses:
        '200':
          description: 3D Secure authentication completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaymentResponse'
        '302':
          description: Redirect to application callback URL
        '400':
          description: Invalid callback data
        '500':
          description: Internal server error
    
    post:
      summary: Handle 3D Secure callback (POST) with default provider
      description: |
        Handles 3D Secure authentication callback from the bank using POST method with default provider.
        This endpoint is called by the bank after user completes 3D authentication.
        
        **No Authentication Required** - Called directly by payment providers.
      tags: [3D Secure]
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                paymentId:
                  type: string
                  description: Payment ID
                conversationId:
                  type: string
                  description: Conversation ID
                status:
                  type: string
                  description: 3D authentication status
                mdStatus:
                  type: string
                  description: 3D authentication result
                tenantId:
                  type: string
                  description: Tenant identifier
      responses:
        '200':
          description: 3D Secure authentication completed
        '302':
          description: Redirect to application callback URL
        '400':
          description: Invalid callback data
        '500':
          description: Internal server error

  # Webhook Operations (No Authentication Required)
  /webhooks/{provider}:
    post:
      summary: Handle webhook notifications
      description: |
        Receives webhook notifications from payment providers for:
        - Payment status updates (success, failure)
        - Refund notifications
        - Fraud alerts
        - Chargeback notifications
        
        **Multi-Tenant Support:**
        - Include `tenantId` query parameter for tenant-specific routing
        - GoPay automatically validates signatures and processes notifications
        
        **Provider-Specific Examples:**
        
        **ƒ∞yzico Webhooks:**
        - Payment completion/failure
        - Refund confirmations
        - Fraud check results
        
        **Stripe Webhooks:**
        - Payment intent updates
        - Subscription events
        - Invoice payments
        
        **No Authentication Required** - Webhooks use cryptographic signatures for security.
      tags: [Webhooks]
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe, paycell, papara, nkolay, paytr, payu]
          description: Payment provider name
          example: iyzico
        - name: tenantId
          in: query
          required: false
          schema:
            type: string
          description: Tenant identifier for multi-tenant webhook routing (optional)
          example: abc_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              description: Provider-specific webhook payload
            examples:
              iyzico_success:
                summary: ƒ∞yzico Payment Success
                value:
                  paymentId: "payment_123"
                  status: "success"
                  transactionId: "txn_456"
                  amount: "100.50"
                  currency: "TRY"
                  paymentTransactionId: "pt_789"
                  conversationId: "conv_abc"
              stripe_payment_intent:
                summary: Stripe Payment Intent
                value:
                  id: "evt_1234567890"
                  type: "payment_intent.succeeded"
                  data:
                    object:
                      id: "pi_1234567890"
                      amount: 10050
                      currency: "usd"
                      status: "succeeded"
              paycell_notification:
                summary: Paycell Payment Notification
                value:
                  transactionId: "123456789"
                  referenceNumber: "ref_123"
                  amount: "100.50"
                  currency: "TRY"
                  status: "SUCCESS"
                  timestamp: "2024-01-15T10:30:00Z"
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "accepted"
                          paymentId:
                            type: string
                            example: "payment_123"
                          processed:
                            type: boolean
                            example: true
                          timestamp:
                            type: string
                            format: date-time
                            example: "2024-01-15T10:30:00Z"
        '400':
          description: Invalid webhook data or signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_signature:
                  summary: Invalid Signature
                  value:
                    success: false
                    message: "Webhook signature validation failed"
                    error: "Invalid or missing signature header"
                invalid_payload:
                  summary: Invalid Payload
                  value:
                    success: false
                    message: "Invalid webhook payload"
                    error: "Required fields missing or malformed data"
        '401':
          description: Webhook authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Logging Operations
  /v1/logs/{provider}:
    get:
      summary: List payment logs with filtering
      description: |
        Retrieves payment logs for a specific tenant and provider with various filtering options.
        
        **Tenant Isolation:**
        - Each tenant can only access their own logs
        - X-Tenant-ID header is required for authentication
        
        **Available Filters:**
        - Payment ID
        - Payment status
        - Errors only
        - Time range (hours)
        
        **Security:**
        - Sensitive data is automatically redacted in logs
        - Auth protected endpoint
      tags: [Logs]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe, paycell, papara, nkolay, paytr, payu]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Tenant identifier (required)
          example: tenant123
        - name: paymentId
          in: query
          required: false
          schema:
            type: string
          description: Filter by specific payment ID
          example: payment123
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [pending, processing, successful, failed, cancelled, refunded]
          description: Filter by payment status
          example: successful
        - name: errorsOnly
          in: query
          required: false
          schema:
            type: boolean
          description: Show only error logs
          example: true
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 168
            default: 24
          description: Time range in hours (max 7 days)
          example: 24
      responses:
        '200':
          description: Logs retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tenantId:
                            type: string
                            example: "tenant123"
                          provider:
                            type: string
                            example: "iyzico"
                          filters:
                            type: object
                            properties:
                              hours:
                                type: integer
                                example: 24
                              paymentId:
                                type: string
                                example: "payment123"
                              status:
                                type: string
                                example: "successful"
                              errorsOnly:
                                type: boolean
                                example: false
                          count:
                            type: integer
                            example: 15
                          logs:
                            type: array
                            items:
                              $ref: '#/components/schemas/PaymentLog'
        '400':
          description: Invalid parameters or missing X-Tenant-ID header
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /v1/logs/{provider}/payment/{paymentID}:
    get:
      summary: Get logs for specific payment
      description: |
        Retrieves all logs related to a specific payment ID.
        
        **Use Cases:**
        - Debug payment issues
        - Track payment flow
        - Audit payment requests/responses
      tags: [Logs]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe, paycell, papara, nkolay, paytr, payu]
          description: Payment provider name
          example: iyzico
        - name: paymentID
          in: path
          required: true
          schema:
            type: string
          description: Payment ID to get logs for
          example: payment123
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Tenant identifier (required)
          example: tenant123
      responses:
        '200':
          description: Payment logs retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tenantId:
                            type: string
                            example: "tenant123"
                          provider:
                            type: string
                            example: "iyzico"
                          paymentId:
                            type: string
                            example: "payment123"
                          count:
                            type: integer
                            example: 3
                          logs:
                            type: array
                            items:
                              $ref: '#/components/schemas/PaymentLog'
        '400':
          description: Invalid parameters or missing X-Tenant-ID header
        '401':
          description: Unauthorized - Invalid API key
        '404':
          description: Payment logs not found
        '500':
          description: Internal server error

  /v1/logs/{provider}/errors:
    get:
      summary: Get recent error logs
      description: |
        Retrieves recent error logs for a specific provider and tenant.
        
        **Error Types:**
        - Payment failures
        - API errors
        - Validation errors
        - Provider-specific errors
      tags: [Logs]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe, paycell, papara, nkolay, paytr, payu]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Tenant identifier (required)
          example: tenant123
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 168
            default: 24
          description: Time range in hours (max 7 days)
          example: 24
      responses:
        '200':
          description: Error logs retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tenantId:
                            type: string
                            example: "tenant123"
                          provider:
                            type: string
                            example: "iyzico"
                          hours:
                            type: integer
                            example: 24
                          count:
                            type: integer
                            example: 5
                          logs:
                            type: array
                            items:
                              $ref: '#/components/schemas/PaymentLog'
        '400':
          description: Invalid parameters or missing X-Tenant-ID header
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /v1/logs/{provider}/stats:
    get:
      summary: Get logging statistics
      description: |
        Retrieves comprehensive logging statistics for a specific provider and tenant.
        
        **Statistics Include:**
        - Total request count
        - Success/error rates
        - Average processing time
        - Status code distribution
        - Error breakdown
      tags: [Logs]
      security:
        - BearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [iyzico, ozanpay, stripe, paycell, papara, nkolay, paytr, payu]
          description: Payment provider name
          example: iyzico
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
          description: Tenant identifier (required)
          example: tenant123
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 168
            default: 24
          description: Time range in hours (max 7 days)
          example: 24
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tenantId:
                            type: string
                            example: "tenant123"
                          provider:
                            type: string
                            example: "iyzico"
                          hours:
                            type: integer
                            example: 24
                          stats:
                            $ref: '#/components/schemas/LoggingStats'
        '400':
          description: Invalid parameters or missing X-Tenant-ID header
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
